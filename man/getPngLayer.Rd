% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getPngLayer.R
\name{getPngLayer}
\alias{getPngLayer}
\title{\code{*.png} Layer}
\usage{
getPngLayer(
  x,
  pngpath,
  align = "center",
  inverse = FALSE,
  dwmode = "curl",
  ...
)
}
\arguments{
\item{x}{an sf object, a simple feature collection (POLYGON or MULTIPOLYGON).}

\item{pngpath}{local path or url of a \code{*.png} file.}

\item{align}{set how the \code{*.png} file should be fitted within \code{x}. Possible values are \code{'left'},\code{'right'} or \code{'center'}.}

\item{inverse}{logical. If \code{FALSE}, overlapped areas of \code{x} on \code{pngpath} are extracted, otherwise non-overlapping areas are returned. See \code{\link[raster:mask]{mask}}.}

\item{dwmode}{Set the download mode. It could be \code{'base'} for \code{\link[utils:download.file]{download.file}} or \code{'curl'} for \code{\link[curl:curl_download]{curl_download}}.}

\item{...}{additional arguments for downloading the file. See \code{\link[utils:download.file]{download.file}} or \code{\link[curl:curl_download]{curl_download}}.}
}
\value{
A \code{RasterBrick} object is returned.
}
\description{
Get a \code{RasterBrick} from a \code{*.png} image cut using the shape of a spatial object. The \code{*.png} file could be either a local file or extracted from a given url.
}
\note{
The accuracy of the final plot would depend on the quality of the \code{*.png} file, 
the scale of \code{x} and the resolution setup of the graphic device.
}
\examples{
\dontrun{
library(sf)

mtq <- st_read(system.file("gpkg/mtq.gpkg", package = "cartography"))

#Local file
dirpng = system.file("img/LogoMartinique.png", package = "cartography")

mask <- getPngLayer(mtq, dirpng)
#Remote file
urlpng = "https://i.imgur.com/gePiDvB.png"

masksea <- getPngLayer(mtq, urlpng, mode = "wb", inverse = TRUE)
}
}
\seealso{
\link{pngLayer}
}
\author{
dieghernan \url{https://stackoverflow.com/users/7877917/dieghernan}
}
